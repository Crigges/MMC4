package Waves

import ClosureTimers
import Main
import UnitMove

int wave = 1
Wave array waves

public function next()
	waves[wave].start()
	wave++
	if wave > 10
		print("You WON!")
		doAfter(2, () -> PauseGameOn())
	
public abstract class Wave

	abstract function start()
	
init
	waves[1] = () -> startWave(20, 20, 1.2, 1, 0.02)
	waves[2] = () -> startWave(50, 20, 1.2, 1, 0.03)
	waves[3] = () -> startWave(50, 20, 1.2, 1, 0.06)
	waves[4] = () -> startWave(70, 20, 1.2, 1.01, 0.04)
	waves[5] = () -> startWave(150, 10, 1.5, 1, 0.04)
	waves[6] = () -> startWave(100, 25, 1.2, 1.01, 0.04)
	waves[7] = () -> startWave(100, 15, 1.2, 1.01, 0.06)
	waves[8] = () -> startWave(200, 25, 1.5, 1.01, 0.04)
	waves[9] = () -> startWave(200, 20, 1.5, 1.03, 0.04)
	waves[10] = () -> startWave(700, 2, 2, 1.1, 0.04)
	waves[11] = () -> startWave(500, 15, 1.5, 1.03, 0.03)
	waves[12] = () -> startWave(500, 20, 1.5, 1.03, 0.03)
	waves[13] = () -> startWave(500, 20, 1.5, 1.03, 0.06)
	waves[14] = () -> startWave(700, 20, 1.5, 1.03, 0.04)
	waves[15] = () -> startWave(1000, 10, 1.5, 1, 0.06)
	waves[16] = () -> startWave(1000, 10, 1.8, 1.03, 0.05)
	waves[17] = () -> startWave(900, 15, 1.8, 1.03, 0.05)
	waves[18] = () -> startWave(1000, 10, 1.8, 1.05, 0.05)
	waves[19] = () -> startWave(1000, 10, 1.8, 1.05, 0.06)
	waves[20] = () -> startWave(1500, 2, 2, 1.12, 0.06)
	print("Meltzone, a song of ice and fire")
	print("Your exercise is to melt the ice. To do this you have to push the enemys into the magma-zone")
	print("Dont let the enemy touch the heart of every flaming existence. If the ice creatures destroy the heart, you will LOOSE the game")
	print("Use your skills and work together to prevent the lovely fire-creatures of being demolished.")
	doAfter(30, () -> next())
	
	
	
function startWave(int hp, int count, real scale, real mass, real speed)
	SetPlayerHandicap(Player(12), hp / 100)
	doPeriodicallyCounted(0.5, count, (CallbackCounted cb) -> begin
		getIcelord(scale, mass, speed)
	end)
	doAfter(count * 0.5, () -> begin
		MoveUnit.spawnEnded = true
	end)
	
function getIcelord(real scale, real mass, real speed) returns MoveUnit
	return new MoveUnit(new Unit(CreateUnit(Player(12), 'h001', getSpawnX(), getSpawnY(), 0), mass), speed, scale)
	
function getSpawnX() returns real
	return gg_rct_Gebiet_000.getCenterX() + GetRandomReal(-100, 100)
	
function getSpawnY() returns real
	return gg_rct_Gebiet_000.getCenterY() + GetRandomReal(-100, 100)