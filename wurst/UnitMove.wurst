package UnitMove
import Main
import LinkedListModule
import ClosureTimers
import Fx
import initlater Waves

public class MoveUnit
	static boolean spawnEnded = true
	use LinkedListModule
	Unit u
	real speed = 0.1
	real speedInc
	static int count = 0
	
	construct(Unit u, real speedInc, real scale)
		doAfter(0.1, () -> SetUnitAnimationByIndex(u.u, 2))
		u.u.setScale(scale)
		this.speedInc = speedInc
		this.u = u
		count++
		
	static function move()
		SetCameraField(CAMERA_FIELD_TARGET_DISTANCE, 2500, 0)
		MoveUnit m = first
		while m != null
			m.u.addKnock(vec2(0, 0).polarOffset(m.u.u.getPos().angleTo(gg_unit_hcas_0028.getPos()), m.speed))
			m.u.u.setFacing(m.u.u.getPos().angleTo(gg_unit_hcas_0028.getPos()))
			m.u.u.setTimeScale(m.speed / 4)
			m.speed += m.speedInc
			if GetTerrainType(m.u.u.getX(), m.u.u.getY()) == 'Dlvc'
				real hp = m.u.u.getHP() - 1
				if hp < 1
					nullTimer(() -> begin 
						destroy m
					end)
				else
					m.u.u.setHP(hp)
			if gg_unit_hcas_0028.getPos().distToVec(m.u.u.getPos()) < 400
				nullTimer(() -> begin 
					destroy m
					Fx fx = new Fx(gg_unit_hcas_0028.getPos(), 0..asAngleDegrees(), "Abilities\\Spells\\Undead\\FrostNova\\FrostNovaTarget.mdl")..setScale(4)
					doAfter(5, () -> destroy fx)
					lives--
					LeaderboardSetItemValue(lb, 0, lives)
					if lives < 0
						gg_unit_hcas_0028.kill()
						print("You Lost")
						doAfter(2, () -> PauseGameOn())
				end)
			m = m.next
			
	ondestroy
		destroy u
		count--
		if count <= 0 and spawnEnded
			spawnEnded = false
			print("Wave completet, next wave in 10sec")
			doAfter(10, () -> next())
			
init
	getTimer().startPeriodic(0.3, function MoveUnit.move)

